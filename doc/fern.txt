*fern.txt*			General purpose asynchronous tree explorer

Author:  Alisue <lambdalisue@hashnote.net>
License: MIT license

=============================================================================
CONTENTS						*fern-contents*

INTRODUCTION				|fern-introduction|
USAGE					|fern-usage|
INTERFACE				|fern-interface|


=============================================================================
INTRODUCTION						*fern-introduction*

*fern.vim* (fern) is a general purpose asynchronous tree explorer written in
pure Vim script.

It provides the following features

- Explorer or Drawer style
  - :Fern {url} to open in explorer style
  - :Fern {url} -drawer to open in drawer style
- Options are buffer name based to support re-opening
  - :e to reload content as like other buffer
  - Friendly for session
- Action based features
  - Hit a to choose action to perform
  - Hit . to repeat previous action
- Generic multi item renamer (like exrename in Shougo/vimfiler.vim)
  - "file" scheme provides multi file/directory renamer

And a builtin "file" scheme provides the following features

- Basic local file operations are supported
  - Perform |cd|, |lcd|, and |tcd| to a directory
  - Open file/directory with a system application
  - Create file/directory
  - Move file/directory
  - Remove file/directory
  - Copy/Paste file/directory through the internal clipboard
- System Trash-bin is supported
  - By osascript in macOS
  - By PowerShell in Windows
  - By andeafrancia/trash-cli
  - By b4b4r07/gomi

This plugin has strongly inspired by the following plugins

https://github.com/Shougo/vimfiler.vim
https://github.com/thinca/vim-qfreplace
https://github.com/lambdalisue/gina.vim


=============================================================================
USAGE							*fern-usage*

Open fern explorer for builtin "file" scheme, execute the following command:
>
	:Fern
<
Then a fern explorer like below will be opened with a working directory:
>
  fern.vim
  |+ autoload
  |+ doc
  |+ ftplugin
  |+ plugin
  |+ test
  |  LICENSE
  |  README.md
<
If you would like to give a root directory explicitly, specify it as a first
argument like:
>
	:Ferm ~/Desktop
<
						*fern-usage-reveal*
If you would like to open fern with focusing a current buffer or whatever, use
"-reveal=..." option like
>
	:Fern . -reveal=autoload/fern/comparator/default.vim
<
Then the explorer opend like following
>
  fern.vim
  |- autoload
   |- fern
    |+ command
    |- comparator
     |  default.vim
     |  lexical.vim
    |+ internal
    |+ lib
    |+ mapping
    |+ scheme
    |  helper.vim
    |  mapping.vim
    |  message.vim
   |+ vital
  |+ doc
  |+ ftplugin
  |+ plugin
  |+ test
  |  LICENSE
  |  README.md
<
Note that if you would like to use "%", use '<C-r>=expand("%")<CR>'.
>
	:Fern . -reveal=<C-r>=expand("%")<CR>
<
						*fern-usage-drawer*
If you prefer a drawer style (e.g. NERDTree), add "-drawer" to the command
like:
>
	:Fern -drawer
<
Then a fern drawer will be popped up to the left side. Note that behavior
between explorer and drawer is slightly different (e.g. "open:side" action.)


=============================================================================
INTERFACE						*fern-interface*

-----------------------------------------------------------------------------
COMMAND							*fern-command*

							*:Fern*
:Fern {url} [-reveal={path}] [-opener={opener}]
	Open fern window in explorer style with {opner} (default: "edit").
	Note that {path} for reveal must be a relative path from {url}.

							*:Fern-drawer*
:Fern {url} -drawer [-reveal={path}] [-width={width}] [-keep] [-toggle]
	Open fern window in drawer style with {width} (default: 30).
	If -keep has sepcified, the buffer will not close even there are only
	this buffer and no named buffer.
	If -toggle has specified, it open or closes existing fern drawer.
	Note that {path} for reveal must be a relative path from {url}.

							*:FernFocus*
:FernFocus [-drawer]
	Focus fern explorer or drawer. If -drawer is specified, it focus only
	drawer window.


-----------------------------------------------------------------------------
FUNCTION						*fern-function*

						*fern#smart#leaf()*
fern#smart#leaf({leaf}, {collapsed}[, {expanded}])
	Return one of a given mapping expression determined by a status of a
	node under the cursor. If the node is leaf, the {leaf} is returned.
	If the node is branch and collapsed, the {collapsed} is returned. If
	the node is branch and expanded, the {expanded} or {collapsed} is
	returned.
>
	" Perform 'open' on leaf node and 'enter' on branch node
	nmap <buffer><expr>
	      \ <Plug>(fern-open-or-enter)
	      \ fern#smart#leaf(
	      \   "\<Plug>(fern-action-open)",
	      \   "\<Plug>(fern-action-enter)",
	      \ )

	" Perform 'open' on leaf node, 'expand' on collapsed node, and
	" 'collapse' on expanded node.
	nmap <buffer><expr>
	      \ <Plug>(fern-open-or-expand-or-collapse)
	      \ fern#smart#leaf(
	      \   "\<Plug>(fern-action-open)",
	      \   "\<Plug>(fern-action-expand)",
	      \   "\<Plug>(fern-action-collapse)",
	      \ )
<
						*fern#smart#drawer()*
fern#smart#drawer({drawer}, {explorer})
	Return one of a given mapping expression determined by the style of
	a current buffer. If the current buffer is drawer, the {drawer} is
	returned. Otherwise the {explorer} is retunred.
>
	" Perform 'expand' on drawer and 'enter' on explorer
	nmap <buffer><expr>
	      \ <Plug>(fern-expand-or-enter)
	      \ fern#smart#drawer(
	      \   "\<Plug>(fern-action-expand)",
	      \   "\<Plug>(fern-action-enter)",
	      \ )
<

=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
